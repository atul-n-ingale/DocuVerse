# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
# But allow our custom lib directory
!worker/app/core/lib/
!worker/app/core/lib/**

lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
celerybeat-schedule.*
celerybeat.pid.*
celery.log
celery.log.*
celery_*.log
celery_*.pid
celery_*.schedule

# Flower monitoring
flower.db
flower.log
/tmp/flower.db
/tmp/flower.log
flower_cache/
flower_data/

# Redis
dump.rdb
*.rdb
redis_dump.rdb
redis_*.rdb

# MongoDB
*.wt
*.lock
mongodb_data/
mongo_data/

# Pinecone
pinecone_cache/
vector_cache/
embedding_cache/

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/modules.xml
#  - .idea/*.iml
#  - .idea/misc.xml
#  - .idea/vcs.xml
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/usage.statistics.xml
#  - .idea/shelf
#  - .idea/dictionaries
#  - .idea/runConfigurations
#  - .idea/inspectionProfiles
#  - .idea/codeStyles
#  - .idea/encodings.xml
#  - .idea/scopes
#  - .idea/compiler.xml
#  - .idea/libraries
#  - .idea/artifacts
#  - .idea/modules
#  - .idea/runConfigurations
#  - .idea/tasks
#  - .idea/workspace

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Storybook build outputs
.out
.storybook-out
storybook-static

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# React specific
frontend/build/
frontend/dist/
frontend/.next/
frontend/out/
frontend/.nuxt/
frontend/.output/
frontend/.cache/
frontend/.parcel-cache/
frontend/.svelte-kit/
frontend/.vite/
frontend/coverage/
frontend/.nyc_output/
frontend/node_modules/
frontend/dist/
frontend/build/
frontend/public/
frontend/.next/
# Frontend development
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

# Docker
Dockerfile.dev
docker-compose.override.yml
docker-compose.dev.yml

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
logs
*.log

# Temporary files
*.tmp
*.temp

# Uploads directory
uploads/

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with secrets
.env
.env.local
.env.production
.env.staging

# Backup files
*.bak
*.backup

# Archive files
*.zip
*.tar.gz
*.rar

# Documentation build
docs/_build/
site/

# Test artifacts
test-results/
coverage/
.nyc_output/

# Build artifacts
build/
dist/
*.egg-info/

# Poetry
poetry.lock

# Pre-commit
.pre-commit-config.yaml.bak

# Local development
.local/
local/

# Monitoring
monitoring/
metrics/

# Cache directories
.cache/
cache/

# Temporary directories
tmp/
temp/

# Lock files (keep poetry.lock but ignore others)
package-lock.json
yarn.lock
pnpm-lock.yaml

# Local configuration
config.local.*
settings.local.*

# Backup directories
backup/
backups/

# Data directories
data/
datasets/

# Model files
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.model
*.bin

# Vector store files
*.faiss
*.index

# Large files
*.pdf
*.docx
*.xlsx
*.csv
*.json
*.xml
*.zip
*.tar.gz
*.rar

# Exclude large files but keep small ones
!*.pdf
!*.docx
!*.xlsx
!*.csv
!*.json
!*.xml

# Include only specific file types in uploads
uploads/*
!uploads/.gitkeep

# Exclude specific directories in uploads
uploads/processed/
uploads/temp/
uploads/cache/

# Project specific
docuverse_cache/
vector_cache/
embedding_cache/
llama_index_cache/
openai_cache/

# Service specific directories
backend/uploads/
worker/uploads/
frontend/public/uploads/

# Development tools
.eslintcache
.prettierignore
.stylelintcache

# Performance monitoring
.nyc_output/
coverage/
*.lcov

# Bundle analyzer
bundle-analyzer-report.html
bundle-analyzer-report.json

# PWA files
sw.js
workbox-*.js

# Sentry
.sentryclirc

# Local SSL certificates
*.pem
*.key
*.crt
*.csr

# Local development databases
*.sqlite3
*.db
*.sql

# Local configuration overrides
config.local.js
config.local.json
settings.local.js
settings.local.json

# IDE workspace files
*.code-workspace
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# macOS
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk 